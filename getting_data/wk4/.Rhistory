oauth_endpoints(gitApp)
?oauth_app
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
install.packages("httpuv")
install.packages("httpuv")
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
library(jsonlite)
library(httr)
library(httpuv)
install.packages(httpuv)
install.packages("httpuv")
git_id = "0f0a2fd5902ce287334a"
git_secret = "e2e13b19c6faaec7ed7eb1819311088f2c78fdc2"
gitApp <- oauth_app("github", git_id, git_secret)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
library(jsonlite)
library(httr)
library(httpuv)
install.packages(c("bigrquery", "checkmate", "crayon", "DBI", "devtools", "httr", "jsonlite", "plyr", "RMySQL"))
install.packages(c("bigrquery", "checkmate", "crayon", "DBI",
)
install.packages(c("bigrquery", "checkmate", "crayon", "DBI", "devtools", "httr", "jsonlite", "plyr", "RMySQL"))
install.packages(c("bigrquery", "checkmate", "crayon", "DBI",
git_id = "8188eaaa449ff7cbe169"
git_secret = "c03528f11f49e3d46dd81edfd28224b41b049b49"
library(jsonlite)
library(httr)
library(httpuv)
gitApp <- oauth_app("github", git_id, git_secret)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
library(jsonlite)
library(httr)
library(httpuv)
git_id = "0f0a2fd5902ce287334a"
git_secret = "e2e13b19c6faaec7ed7eb1819311088f2c78fdc2"
gitApp <- oauth_app("github", git_id, git_secret)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
install.packages(c("httr", "jsonlite"))
install.packages(c("httr", "jsonlite"))
install.packages(c("httr", "jsonlite"))
install.packages(c("plyr", "RMySQL"))
install.packages(c("bigrquery", "checkmate", "crayon", "DBI"))
library(jsonlite)
library(httr)
library(Rcpp)
library(httpuv)
git_id = "0f0a2fd5902ce287334a"
git_secret = "e2e13b19c6faaec7ed7eb1819311088f2c78fdc2"
gitApp <- oauth_app("github", git_id, git_secret)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
git_id = "0f0a2fd5902ce287334a"
git_secret = "e2e13b19c6faaec7ed7eb1819311088f2c78fdc2"
gitApp <- oauth_app("github", git_id, git_secret)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
library(jsonlite)
library(httr)
library(Rcpp)
library(httpuv)
git_id = "0f0a2fd5902ce287334a"
git_secret = "e2e13b19c6faaec7ed7eb1819311088f2c78fdc2"
gitApp <- oauth_app("github", git_id, git_secret)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
?httpuv
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
library(jsonlite)
library(httr)
library(httpuv)
gitApp
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
?readRDS
library(sqdlf)
library(sqldf)
acsURL = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
doc <- file.path(getwd(),"acsdata.csv")
download.file(acsURL,doc)
acs <- data.table(read.csv(doc))
library(data.table)
acs <- data.table(read.csv(doc))
sqldf("select * from acs")
q2 <- sqldf("select * from acs where AGEP < 50")
q2
q3 <- sqldf("select pwgtp1 from acs where AGEP < 50")
q3
q4 <- qldf("select pwgtp1 from acs")
q4 <- sqldf("select pwgtp1 from acs")
q4
q3
unique(acs$AGEP)
unique(acs$AGEP) = sqldf("select distinct pwgtp1 from acs")
q3 <- unique(acs$AGEP)
q3a1 <- sqldf("select distinct pwgtp1 from acs")
q3 = q3a1
q3 <- unique(acs$AGEP)
q3 == q3a1
q3a2 <- sqldf("select distinct AGEP from acs")
q3a3 <- sqldf("select AGEP where unique from acs")
q3a4 <- sqldf("select unique AGEP from acs")
q3 == q3a2
library(nch)
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
q4 <- readLines(connection)
close(connection)
c(nchar(q4[10]), nchar(q4[20]), nchar(q4[30]), nchar(q4[100]))
q5URL = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
q5 <- readLines(q5URL, n=9)
q5
sum(q5[,4])
head(q5)
q5[,5]
q5[5,]
str(q5)
class(q5)
q5[4,]
library(fwf)
install.packages(fwf)
install.packages("read.fwf")
install.packages("readr")
library(readr)
x <- read_fwf(q5URL,skip = 4,fwf_widths(c(12,7,4,9,4,9,4,9,4)))
sum(x[,4])
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
library(httr)
library(httpuv)
require(httpuv)
require(jsonlite)
gitApp <- oauth_app("github", git_id, git_secret)
git_token <- oauth2.0_token(oauth_endpoints("github"),gitApp)
?readRDS
setwd("C:/Users/Randall/rhelms_data/datasciencecoursera/getting_data/wk4")
list.dirs()
setwd("./UCI HAR Dataset" )
library(data.table)
library(plyr)
features <- fread("features.txt")
features$V1 <- NULL #don't need this column
setwd("./train")
xtrain <- fread("X_train.txt")
ytrain <- fread("y_train.txt")
subject_train <- fread("subject_train.txt")
setwd("..")
setwd("./test")
xtest <- fread("X_test.txt")
ytest <- fread("y_test.txt")
subject_test <- fread("subject_test.txt")
xMerged <- rbind(xtrain,xtest)
yMerged <- rbind(ytrain,ytest)
colnames(xMerged) <- as.character(unlist(features))
colnames(yMerged) = c("activities")
meanstd_cols <-  grep("(mean|std)\\(\\)",names(xMerged))
xMerged <- subset(xMerged,select = meanstd_cols)
names(xMerged) <- gsub("^t", "Time_", names(xMerged)) %>%
gsub("^f", "Frequency_", names(xMerged)) %>%
gsub("-mean\\(\\)","_Mean",names(xMerged)) %>%
gsub("-std\\(\\)","_Standard_Deviation",names(xMerged)) %>%
gsub("-","_",names(xMerged)) %>%
gsub("Gyro","_Gyroscope",names(xMerged)) %>%
gsub("Acc","_Accelerometer",names(xMerged)) %>%
gsub("Jerk","_Jerk",names(xMerged)) %>%
gsub("Mag","_Magnitude",names(xMerged)) %>%
gsub("BodyBody","Body",names(xMerged))
sat %>%
names(xMerged) <- gsub("^t", "Time_", names(xMerged)) %>%
gsub("^f", "Frequency_", names(xMerged)) %>%
gsub("-mean\\(\\)","_Mean",names(xMerged)) %>%
gsub("-std\\(\\)","_Standard_Deviation",names(xMerged)) %>%
gsub("-","_",names(xMerged)) %>%
gsub("Gyro","_Gyroscope",names(xMerged)) %>%
gsub("Acc","_Accelerometer",names(xMerged)) %>%
gsub("Jerk","_Jerk",names(xMerged)) %>%
gsub("Mag","_Magnitude",names(xMerged)) %>%
gsub("BodyBody","Body",names(xMerged))
library(tidyr)
names(xMerged) <- gsub("^t", "Time_", names(xMerged)) %>%
gsub("^f", "Frequency_", names(xMerged)) %>%
gsub("-mean\\(\\)","_Mean",names(xMerged)) %>%
gsub("-std\\(\\)","_Standard_Deviation",names(xMerged)) %>%
gsub("-","_",names(xMerged)) %>%
gsub("Gyro","_Gyroscope",names(xMerged)) %>%
gsub("Acc","_Accelerometer",names(xMerged)) %>%
gsub("Jerk","_Jerk",names(xMerged)) %>%
gsub("Mag","_Magnitude",names(xMerged)) %>%
gsub("BodyBody","Body",names(xMerged))
names(xMerged) <- gsub("^t", "Time_", names(xMerged))
names(xMerged) <- gsub("^f", "Frequency_", names(xMerged))
names(xMerged) <- gsub("-mean\\(\\)","_Mean",names(xMerged))
names(xMerged) <- gsub("-std\\(\\)","_Standard_Deviation",names(xMerged))
names(xMerged) <- gsub("-","_",names(xMerged))
names(xMerged) <- gsub("Gyro","_Gyroscope",names(xMerged))
names(xMerged) <- gsub("Acc","_Accelerometer",names(xMerged))
names(xMerged) <- gsub("Jerk","_Jerk",names(xMerged))
names(xMerged) <- gsub("Mag","_Magnitude",names(xMerged))
names(xMerged) <- gsub("BodyBody","Body",names(xMerged))
subjects <- rbind(subject_train,subject_test)
colnames(subjects) <- c("subject_id")
merged_data <- data.table(xMerged,yMerged,subjects)
merged_data$activities <- mapvalues(
merged_data$activities,
from = c("1","2","3","4","5","6"),
to = c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING"))
chopped_data <- melt(merged_data,id.vars = c("activities","subject_id"))
tidy_data = dcast(chopped_data, activities + subject_id ~ variable, mean)
setwd("..")
write.table(tidy_data,file = "tidy_data2.txt")
tidy_check <- fread("tidy_data2.txt")
names(tidy_check)
tidy_check <- read.table("tidy_data2.txt")
names(tidy_check)
head(tidy_check)
getwd()
names(tidy_data)
names(xMerged)
xMerged2 <- rbind(xtrain,xtest)
colnames(xMerged2) <- as.character(unlist(features))
names(xMerged2)
meanstd_cols2 <-  grep("(mean|std)\\(\\)",names(xMerged2))
xMerged2 <- subset(xMerged2,select = meanstd_cols2)
names(xMerged2)
getwd()
write.table(tidy_data,file = "tidy_data.txt")
write.table(tidy_data,file = "tidy_data.csv",sep = ",",row.names = FALSE)
write.table(tidy_data,file = "tidy_data.txt",row.names = FALSE)
getwd()
td2 <- read.csv("C:/Users/Randall/rhelms_data/datasciencecoursera/getting_data/wk4/final_course_project/tidy_data.txt", sep="")
View(td2)
swirl()
library(swirl)
swirl()
myplot(2)
myplot
myplot(20)
myplot(2)
myplot2(2)
myplot2
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1,1) * qt(.975,9) * s/sqrt(10)
t.test(x$cont.int)
x$conf.int
t.test(mn$conf.int)
mn$conf.int
t.test(difference)$conf.int
(7*15.34^2)+(20*18.23^2)
sp <- (7*15.34^2)+(20*18.23^2)
ns <- 7 + 20
sp <- sqrt(sp/ns)
(132.86-127.44) + c(-1,1) * qt(.95,ns) * (sp*sqrt(1/8 + 1/21)/sqrt(29)
)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
?var
sp <- sqrt(var(g,g2)/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1) * qt(.975,18) * sp * swrt(1/5)
md + c(-1,1) * qt(.975,18) * sp * sqrt(1/5)
t.test(g2,g1,paired = FALSE,var.equal = TRUE)$conf
t.test(g2,g1,paired = TRUE,var.equal = TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
getwd()
setwd("..")
getwd()
list.dirs()
setwd("./final_course_project/reviews")
list.files()
tidy_serge <- read.table("tidy_data_serge.txt")
summary(tidy_serge)
names(tidy_serge)
library(data.table)
setwd("..")
getwd()
setwd("..")
list.dirs()
setwd("./UCI HAR Dataset" )
#Accessing working directory
mypath <- getwd()
#Getting the names of files in setting directory
list.files(mypath, recursive = TRUE)
#For reading the subject files
dtb_SubjectTrain <- fread(file.path(mypath, "train", "subject_train.txt"))
dtb_SubjectTest <- fread(file.path(mypath, "test", "subject_test.txt"))
#For reading the activities files.
dtb_ActivityTrain <- fread(file.path(mypath, "train", "Y_train.txt"))
dtb_ActivityTest <- fread(file.path(mypath, "test", "Y_test.txt"))
#For reading the training dataset and  the test dataset files
df1 <- read.table(file.path(mypath, "train", "X_train.txt"))
df2 <- read.table(file.path(mypath, "test", "X_test.txt"))
dtb_SetTraining <- data.table(df1)
dtb_SetTest <- data.table(df2)
#Reading features and activity_labels files
dtb_features <- fread(file.path(mypath, "features.txt"))
dtb_ActivityLabels <- fread(file.path(mypath, "activity_labels.txt"))
#Combine the data tables by raws. Example : dtb_SubjectTrain and dtb_SubjectTest.
dtb_Subject <- rbind(dtb_SubjectTrain, dtb_SubjectTest)
dtb_Activity <- rbind(dtb_ActivityTrain, dtb_ActivityTest)
dtb_set <- rbind(dtb_SetTraining , dtb_SetTest)
#Cleaning memory
rm(dtb_SetTraining, dtb_SetTest, dtb_SubjectTest, dtb_SubjectTrain, dtb_ActivityTrain, dtb_ActivityTest)
#Extraction the row numbers containing mean and std recording
meanANDstd_Rows <- grep("-(mean|std)\\(\\)", dtb_features[,V2])
#Extraction of desired columns in dataset
dtb_set <- dtb_set[, meanANDstd_Rows, with=FALSE]
dtb_Activity[, V1] <- dtb_ActivityLabels[dtb_Activity[, V1], V2]
# Changing column names by reference without loading copying the whole dataset.
setnames(dtb_set, dtb_features[meanANDstd_Rows, V2])
setnames(dtb_Activity, "V1", "Activity_")
setnames(dtb_Subject, "V1", "Subject_")
#Combine all "training" and "test sets" data to a single data set.
data_new <- cbind(dtb_set, dtb_Activity, dtb_Subject)
#Creating tidy data containing the average value of each variable for each activity and each subject
library(plyr)
tidy_data_serge <- ddply(data_new, .(Subject_, Activity_), function(x) colMeans(x[, 1:66]))
#Write tidy_data txt file.
write.table(tidy_data_serge, "tidy_data_serge.txt", row.name=FALSE)
list.files()
tidy_serge <- read.table("tidy_data_serge.txt")
dim(tidy_serge)
head(tidy_serge)
tidy_data_z <- read.csv("C:/Users/Randall/rhelms_data/datasciencecoursera/getting_data/wk4/final_course_project/reviews/tidy_data_z.txt", sep="")
View(tidy_data_z)
names(tidy_data_z)
dim(tidy_data_z)
getwd()
# read test data
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
# read train data
y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
# merge test and train data
X <- rbind(X_train, X_test)
y <- rbind(y_train, y_test)
subject <- rbind(subject_train, subject_test)
names(subject) <- "subject"
names(y) <- "activity"
featureNames <- read.table("./UCI HAR Dataset/features.txt")[,2]
names(X) <- featureNames
mergedData <- cbind(subject, y, X)
# Extracts only the measurements on the mean and standard deviation for each
# measurement
selectedFeatureNames <- featureNames[grep("mean\\(\\)|std\\(\\)", featureNames)]
varNames <- c("subject", "activity", as.character(selectedFeatureNames))
selectedData <- subset(mergedData, select = varNames)
# Uses descriptive activity names to name the activities
activityLabels <- read.table("./UCI HAR Dataset/activity_labels.txt")[,2]
selectedData$activity <- activityLabels[selectedData$activity]
# Appropriately labels the data set with descriptive variable names.
names(selectedData)<-gsub("^t", "time", names(selectedData))
names(selectedData)<-gsub("^f", "frequency", names(selectedData))
names(selectedData)<-gsub("Acc", "Accelerometer", names(selectedData))
names(selectedData)<-gsub("Gyro", "Gyroscope", names(selectedData))
names(selectedData)<-gsub("Mag", "Magnitude", names(selectedData))
names(selectedData)<-gsub("BodyBody", "Body", names(selectedData))
# creates a second, independent tidy data set with the average of each variable
# for each activity and each subject.
library(plyr)
tidydataz<-aggregate(. ~subject + activity, selectedData, mean)
write.table(tidydataz, file = "tidydataz.txt",row.name=FALSE)
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
setwd("..")
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
# merge test and train data
X <- rbind(X_train, X_test)
y <- rbind(y_train, y_test)
subject <- rbind(subject_train, subject_test)
names(subject) <- "subject"
names(y) <- "activity"
featureNames <- read.table("./UCI HAR Dataset/features.txt")[,2]
names(X) <- featureNames
mergedData <- cbind(subject, y, X)
# Extracts only the measurements on the mean and standard deviation for each
# measurement
selectedFeatureNames <- featureNames[grep("mean\\(\\)|std\\(\\)", featureNames)]
varNames <- c("subject", "activity", as.character(selectedFeatureNames))
selectedData <- subset(mergedData, select = varNames)
# Uses descriptive activity names to name the activities
activityLabels <- read.table("./UCI HAR Dataset/activity_labels.txt")[,2]
selectedData$activity <- activityLabels[selectedData$activity]
# Appropriately labels the data set with descriptive variable names.
names(selectedData)<-gsub("^t", "time", names(selectedData))
names(selectedData)<-gsub("^f", "frequency", names(selectedData))
names(selectedData)<-gsub("Acc", "Accelerometer", names(selectedData))
names(selectedData)<-gsub("Gyro", "Gyroscope", names(selectedData))
names(selectedData)<-gsub("Mag", "Magnitude", names(selectedData))
names(selectedData)<-gsub("BodyBody", "Body", names(selectedData))
# creates a second, independent tidy data set with the average of each variable
# for each activity and each subject.
library(plyr)
tidydataz<-aggregate(. ~subject + activity, selectedData, mean)
write.table(tidydataz, file = "tidydata.txt",row.name=FALSE)
tidydataztxt <- read.files("tidydataz.txt")
tidydataztxt <- read.file("tidydataz.txt")
tidydataztxt <- read.table("tidydataz.txt")
names(tidydataztxt)
tidy_teoh <- read.csv("C:/Users/Randall/rhelms_data/datasciencecoursera/getting_data/wk4/final_course_project/reviews/tidy_teoh.txt", sep="")
View(tidy_teoh)
library(reshape2)
activityLabels <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
activityLabels[,2] <- as.character(activityLabels[,2])
features <- read.table("./data/UCI HAR Dataset/features.txt")
features[,2] <- as.character(features[,2])
getwd("")
getwd
getwd()
setwd("./UCI HAR Dataset")
activityLabels <- read.table("activity_labels.txt")
activityLabels[,2] <- as.character(activityLabels[,2])
features <- read.table("features.txt")
features[,2] <- as.character(features[,2])
featuresWanted <- grep(".*mean.*|.*std.*", features[,2])
featuresWanted.names <- features[featuresWanted,2]
featuresWanted.names = gsub('-mean', 'Mean', featuresWanted.names)
featuresWanted.names = gsub('-std', 'Std', featuresWanted.names)
featuresWanted.names <- gsub('[-()]', '', featuresWanted.names)
train <- read.table("./train/X_train.txt")[featuresWanted]
trainActivities <- read.table(./train/Y_train.txt")
trainSubjects <- read.table("./train/subject_train.txt")
train <- cbind(trainSubjects, trainActivities, train)
trainActivities <- read.table("./train/Y_train.txt")
trainSubjects <- read.table("./train/subject_train.txt")
train <- cbind(trainSubjects, trainActivities, train)
test <- read.table("./test/X_test.txt")[featuresWanted]
testActivities <- read.table("./test/Y_test.txt")
testSubjects <- read.table("./test/subject_test.txt")
test <- cbind(testSubjects, testActivities, test)
allData <- rbind(train, test)
colnames(allData) <- c("subject", "activity", featuresWanted.names)
allData$activity <- factor(allData$activity, levels = activityLabels[,1], labels = activityLabels[,2])
allData$subject <- as.factor(allData$subject)
allData.melted <- melt(allData, id = c("subject", "activity"))
allData.mean <- dcast(allData.melted, subject + activity ~ variable, mean)
write.table(allData.mean, "tidyteoh.txt", row.names = FALSE, quote = FALSE)
list.file()
list.files()
tidyteoh <- read.table("tidy_data.txt")
names(tidyteoh)
head(tidyteoh)
tidy_caleb <- read.csv("C:/Users/Randall/rhelms_data/datasciencecoursera/getting_data/wk4/final_course_project/reviews/tidy_caleb.txt", sep="")
View(tidy_caleb)
library(dplyr)
library(data.table)
library(tidyr)
getwd()
setwd("..")
filesPath <- "data/UCI HAR Dataset"
dataSubjectTrain <- tbl_df(read.table(file.path(filesPath, "train", "subject_train.txt")))
dataSubjectTest <- tbl_df(read.table(file.path(filesPath, "test" , "subject_test.txt" )))
filesPath <- ".data/UCI HAR Dataset"
dataSubjectTrain <- tbl_df(read.table(file.path(filesPath, "train", "subject_train.txt")))
filesPath <- "./UCI HAR Dataset"
dataSubjectTrain <- tbl_df(read.table(file.path(filesPath, "train", "subject_train.txt")))
dataSubjectTest <- tbl_df(read.table(file.path(filesPath, "test" , "subject_test.txt" )))
dataActivityTrain <- tbl_df(read.table(file.path(filesPath, "train", "Y_train.txt")))
dataActivityTest  <- tbl_df(read.table(file.path(filesPath, "test" , "Y_test.txt" )))
#read data files.
dataTrain <- tbl_df(read.table(file.path(filesPath, "train", "X_train.txt" )))
dataTest <- tbl_df(read.table(file.path(filesPath, "test" , "X_test.txt" )))
alldataSubject <- rbind(dataSubjectTrain, dataSubjectTest)
setnames(alldataSubject, "V1", "subject")
alldataActivity<- rbind(dataActivityTrain, dataActivityTest)
setnames(alldataActivity, "V1", "activityNum")
dataTable <- rbind(dataTrain, dataTest)
dataFeatures <- tbl_df(read.table(file.path(filesPath, "features.txt")))
setnames(dataFeatures, names(dataFeatures), c("featureNum", "featureName"))
colnames(dataTable) <- dataFeatures$featureName
#column names for activity labels
activityLabels<- tbl_df(read.table(file.path(filesPath, "activity_labels.txt")))
setnames(activityLabels, names(activityLabels), c("activityNum","activityName"))
# Merge columns
alldataSubjAct<- cbind(alldataSubject, alldataActivity)
dataTable <- cbind(alldataSubjAct, dataTable)
dataFeaturesMeanStd <- grep("mean\\(\\)|std\\(\\)",dataFeatures$featureName,value=TRUE) #var name
#taking only measurements for the mean and standard deviation and add "subject","activityNum"
dataFeaturesMeanStd <- union(c("subject","activityNum"), dataFeaturesMeanStd)
dataTable<- subset(dataTable,select=dataFeaturesMeanStd)
##Req 3: Uses descriptive activity names to name the activities in the data set
##enter name of activity into dataTable
dataTable <- merge(activityLabels, dataTable , by="activityNum", all.x=TRUE)
dataTable$activityName <- as.character(dataTable$activityName)
## create dataTable with variable means sorted by subject and Activity
dataTable$activityName <- as.character(dataTable$activityName)
dataAggr<- aggregate(. ~ subject - activityName, data = dataTable, mean)
dataTable<- tbl_df(arrange(dataAggr,subject,activityName))
head(str(dataTable),2)
names(dataTable)<-gsub("std()", "SD", names(dataTable))
names(dataTable)<-gsub("mean()", "MEAN", names(dataTable))
names(dataTable)<-gsub("^t", "time", names(dataTable))
names(dataTable)<-gsub("^f", "frequency", names(dataTable))
names(dataTable)<-gsub("Acc", "Accelerometer", names(dataTable))
names(dataTable)<-gsub("Gyro", "Gyroscope", names(dataTable))
names(dataTable)<-gsub("Mag", "Magnitude", names(dataTable))
names(dataTable)<-gsub("BodyBody", "Body", names(dataTable))
write.table(dataTable, "TidyDataC.txt", row.name=FALSE)
