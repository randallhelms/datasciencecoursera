set.seed(1980)
lambda = 0.2
simulations = 1000
n = 40
sd = 1/lambda
sim_exp <- replicate(simulations,rexp(n,lambda))
mean_exp <- apply(sim_exp,2,mean)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col="blue")
library(colorRampPalette)
install.packages("colorRampPalette")
install.packages("acepack")
install.packages(c("cluster", "GuardianR", "tuneR"))
search()
library(ggplot2)
library(colorRampPalette)
install.packages("colorRampPalette")
library(grDevices)
colfunc<-colorRampPalette(c("red","yellow","springgreen","royalblue"))
colorRampPalette()
colorRampPalette
set.seed(1980)
lambda = 0.2
simulations = 1000
n = 40
sd = 1/lambda
#simulate the exponentials
sim_exp <- replicate(simulations,rexp(n,lambda))
#calculate the mean of exponentials
mean_exp <- apply(sim_exp,2,mean)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(10))
colfunc<-colorRampPalette(c("springgreen","royalblue"))
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(10))
sample_mean = mean(mean_exp)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col="blue",breaks=20)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(20),breaks=20)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(50),breaks=20)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(30),breaks=20)
abline(v=sample_mean,lwd="3",col="green",lty=4)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(25),breaks=20)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(28),breaks=20)
abline(v=sample_mean,lwd="3",col="green",lty=4)
sim_sd <- sd(mean_exp)
sim_var <- sim_sd^2
theory_sd <- (1/lambda)/sqrt(n)
theory_var <- theory_sd^2
print(paste("Theoretical standard deviation: ",theory_sd, "vs. Simulated standard deviation: ",sim_sd))
print(paste("Theoretical variance: ",theory_var, "vs. Simulated variance: ",sim_var))
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(40),breaks=40)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(50),breaks=40)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(55),breaks=40)
x <- seq(min(mean_exp),max(mean_exp),length=100)
y <- dnorm(x, mean = 1/lambda, sd = theory_sd)
lines(x,y*100,col="black",lty=1,lwd=4)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(28),breaks=40)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(55),breaks=40)
abline(v=sample_mean,lwd="3",col="green",lty=4)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(10))
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(25),breaks=20)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(28),breaks=20)
abline(v=sample_mean,lwd="3",col="green",lty=4)
hist(mean_exp,main = "1000 Simulated Exponential Means",xlab="Simulation Means",col=colfunc(55),breaks=40)
abline(v=sample_mean,lwd="3",col="green",lty=4)
sample_mean
print(paste("Theoretical standard deviation: ",theory_sd, "vs. Simulated standard deviation: ",sim_sd))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
?knit_engines
?knit
getwd()
setwd("C://Users/pears/data/datasciencecoursera/stats_inference/wk4")
list.files()
list.dirs()
setwd("./project")
list.files()
knit("test2.Rmd",output="test2.pdf",encoding = 'UTF-8')
