class(iris)
head(iris)
class(iris$Species)
class(iris$Sepal.Width)
sapply(iris, class)
?sapply
?optim
make.NegLogLik <- function(data, fixed=c(FALSE, FALSE)) {
params <- fixed
function(p) {
params[!fixed] <- p
mu <- params[1]
sigma <- params[2]
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
-(a-b)
}
}
?params
?fixed
?log
make.NegLogLik
?set.seed
set.seed(1);normals <- rnorm(100,1,2)
nLL <- make.NegLogLik(normals)
nLL
ls(environment(nLL))
class(nLL)
class(normals)
?ls
ls(andy)
ls(iris)
nll(5)
nLL(5)
nLL(2.5)
nLL(-1.5)
optim(c(mu = 0, sigma = 1), nLL)$par
optim(c(mu = 0, sigma = 1), nLL)$par
make.NegLogLik <- function(data, fixed=c(FALSE, FALSE)) {
params <- fixed
function(p) {
params[!fixed] <- p
mu <- params[1]
sigma <- params[2]
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
-(a-b)
}
}
set.seed(1);normals <- rnorm(100,1,2)
nLL <- make.NegLogLik(normals)
optim(c(mu = 0, sigma = 1), nLL)$par
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
z <- 2
f(3)
z <- 15
f(3)
f(2)
f(6)
x <- 5
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f(2)
f(5)
z <- 4
f(3)
parent.frame()
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(2)
?cbind
getwd()
setwd(""C:/Users/Randall/rhelms_data/specdata")
setwd("C:/Users/Randall/rhelms_data/specdata")
getwd()
ls()
list.files()
f332 <- read.csv("332.csv")
f332
head(f332)
class(f332)
summary(f332)
progwk2 <- list.files()
progwk2
head(read.csv(progwk2[2]))
progwk2_data <- data.frame()
for (i in 1:332) {
progwk2_data <- rbind(progrwk2_data, read.csv(progwk2[i]))
}
str(progwk2_data)
progwk2_data <- data.frame()
for (i in 1:332) {
progwk2_data <- rbind(progwk2_data, read.csv(progwk2[i]))
}
progwk2
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(progwk2[i]))
}
str(dat)
class(dat)
wk2pro <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(progwk2[i]))
}
str(dat)
wk2pro <- data.frame()
for (i in 1:5) {
wk2pro <- rbind(wk2pro, read.csv(progwk2[i]))
}
str(wk2pro)
median(wk2pro$sulfate)
median(wk2pro$sulfate, na.rm = TRUE)
head(wk2pro)
wk2pro <- data.frame()
for (i in 1:332) {
wk2pro <- rbind(wk2pro, read.csv(progwk2[i]))
}
tail(wk2pro)
wk32pro <- data.frame()
for (i in 1:332) {
wk32pro <- rbind(wk32pro, read.csv(files_full[i]))
}
str(wk32pro)
wk32pro <- data.frame()
for (i in 1:332) {
wk32pro <- rbind(wk32pro, read.csv(progwk2[i]))
}
wk32pro <- data.frame()
for (i in 1:332) {
wk32pro <- rbind(wk32pro, read.csv(progwk2[i]))
}
str(wk32pro)
summary(wk32pro)
tail(wk32pro)
file332 <- read.csv("332.csv")
tail(file332)
file.list
ls()
list.files()
progwk2
class(wk32pro)
dat32 <- data.frame()
for (i in 1:332) {
dat32 <- rbind(dat32, read.csv(files_full[i]))
}
str(dat32)
dat32 <- data.frame()
for (i in 1:332) {
dat32 <- rbind(dat32, read.csv(wk32pro[i]))
}
str(dat32)
dat32 <- data.frame()
for (i in 1:332) {
dat32 <- rbind(dat32, read.csv(wk32pro[i]))
}
str(dat32)
for (i in 1:5) {
dat32 <- rbind(dat32, read.csv(progwk32[i]))
}
str(dat32)
for (i in 1:5) {
dat32 <- rbind(dat32, read.csv(progwk2[i]))
}
str(dat32)
for (i in 1:332) {
dat32 <- rbind(dat32, read.csv(progwk2[i]))
}
for (i in 1:15) {
dat32 <- rbind(dat32, read.csv(progwk2[i]))
}
str(dat32)
for (i in 1:332) {
dat32 <- rbind(dat32, read.csv(progwk2[i]))
}
str(dat32)
tail(dat32)
tail(file332)
View(dat32)
View(dat32)
View(progwk2_data)
names(dat32)
ncol(dat32)
nrow(dat32)
?aply
?apply
library(datasets)
data("mtcars")
theCol <- "cyl"
mtcars[[theCol]]
mtcars[,theCol]
mtcars$cyl
names(progwk2)
names(dat32)
getwd()
list.files("C:/Users/Randall/rhelms_data/specdata", full.names = TRUE)[23:50]
?grep
boundID <- function(idlist) {
use <- idList < 333 & idList > 0
if (length(idlist[use]) != length(idList)) {
cat("Some IDs have been removed from this list as they are out of range")
}
idList[use]
}
boundID(35,38,320:340)
boundID(320:340)
boundID <- function(idList){
use <- idList < 333 & idList > 0
if (length(idList[use]) != length(idList)){
cat("Some IDs have been removed from this list as they are out of range.\nCurrent range is 1-332.\n\n")
}
idList[use]
}
pollutantIsNotValid <- function(pollutantToCheck){
possiblePollutants <- c("sulfate", "nitrate")
!(match(pollutantToCheck, possiblePollutants) > 0 & !is.na(match(pollutantToCheck, possiblePollutants)))
}
pollutantmean <- function(directory = "~/Development/JHUDataScience/ProgrammingAssignment1/specdata", pollutant, id = 1:332) {
id <- boundID(id)
if(length(id) < 1) {
stop("No valid IDs remain.")
}
pollutant <- tolower(pollutant)
if(pollutantIsNotValid(pollutant)){
stop("Invalid pollutant provided. Valid pollutants are sulfate and nitrate.")
}
}
pollmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = directory
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
getwd()
pollmean("C:/Users/Randall/rhelms_data/specdata","nitrate",70:72)
pollmean("C:/Users/Randall/rhelms_data/specdata","nitrate",23)
pollmean(,"sulfate",1:10)
pollmean("C:/Users/Randall/rhelms_data/specdata","sulfate",1:10)
directory
directory()
path()
pollmean2 <- function(directory, pollutant, id = 1:332) {
#get the file List in that directory
fileList = list.files(directory)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollmean2("C:/Users/Randall/rhelms_data/specdata","sulfate",1:10)
pollmean2 <- function(directory, pollutant, id = 1:332) {
#get the file List in that directory
fileList = list.files(directory)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.directory(directory,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollmean2("C:/Users/Randall/rhelms_data/specdata","sulfate",1:10)
pollmean3 <- function(directory, pollutant, id = 1:332) {
#set wd
wd <- directory
#get the file List in that directory
fileList = list.files(wd)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.wd(wd,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollmean3("C:/Users/Randall/rhelms_data/specdata","sulfate",1:10)
pollmean3 <- function(directory, pollutant, id = 1:332) {
#set wd
wd = directory
#get the file List in that directory
fileList = list.files(wd)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.wd(wd,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollmean3("C:/Users/Randall/rhelms_data/specdata","sulfate",1:10)
?path
??path
?file.path
pollmean2 <- function(directory, pollutant, id = 1:332) {
#set the path
wd = directory
#get the file List in that directory
fileList = list.files(wd)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(wd,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollmean2("C:/Users/Randall/rhelms_data/specdata","sulfate",1:10)
?as.numeric
?\\
?sub
?do.call
?list.files
?match
?lapply
?do.call
?complete.cases
complete <- function(directory, id = 1:332) {
#set the path
wd = directory
#get the file List in that directory
fileList = list.files(wd)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(wd,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate sum
sum(complete.cases(Data))
}
getwd()
complete("C:/Users/Randall/rhelms_data/specdata",3)
complete <- function(directory, id = 1:332) {
nobs <- function (id) {
#set the path
wd = directory
#get the file List in that directory
fileList = list.files(wd)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(wd,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate sum
sum(complete.cases(Data))}
return (data.frame(id=id, nobs=sapply(id,nobs)))
}
complete("C:/Users/Randall/rhelms_data/specdata",3)
complete("C:/Users/Randall/rhelms_data/specdata",30:25)
?return
complete("C:/Users/Randall/rhelms_data/specdata",c(2, 4, 8, 10, 12))
?cor
?fname
corr <- function(directory,threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
corr("C:/Users/Randall/rhelms_data/specdata",2)
corr("C:/Users/Randall/rhelms_data/specdata",50)
corr("C:/Users/Randall/rhelms_data/specdata",5000)
cr<- corr("C:/Users/Randall/rhelms_data/specdata", 150)
head(cr)
summary(cr)
?file.path
?complete.obs
?list.files
?unlist
cr3 <- corr("C:/Users/Randall/rhelms_data/specdata", 400)
head(cr3)
summary(cr3)
length(cr3)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
wd = directory
#get the file List in that directory
fileList = list.files(wd)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(wd,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
C:/Users/Randall/rhelms_data/specdata
pollutantmean("C:/Users/Randall/rhelms_data/specdata", "sulfate", 1:10)
pollutantmean("C:/Users/Randall/rhelms_data/specdata", "nitrate", 70:72)
pollutantmean("C:/Users/Randall/rhelms_data/specdata", "sulfate", 34)
pollutantmean("C:/Users/Randall/rhelms_data/specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310)
print(cc$nobs)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310)
+ print(cc$nobs)
()
dsafr
cc <- complete("C:/Users/Randall/rhelms_data/specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("C:/Users/Randall/rhelms_data/specdata", 54)
> print(cc$nobs)
cc <- complete("C:/Users/Randall/rhelms_data/specdata", 54)
print(cc$nobs)
set.seed(42)
cc1 <- complete("C:/Users/Randall/rhelms_data/specdata",332:1)
use <- sample(332,10)
print(cc1[use,"nobs"])
cr2 <- corr("C:/Users/Randall/rhelms_data/specdata")
cr2 <- sort(cr2)
set.seed(868)
out <- round(cr[sample(length(cr2), 5)],4)
print(out)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("C:/Users/Randall/rhelms_data/specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("C:/Users/Randall/rhelms_data/specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("C:/Users/Randall/rhelms_data/specdata", 2000)
n <- length(cr)
cr <- corr("C:/Users/Randall/rhelms_data/specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
